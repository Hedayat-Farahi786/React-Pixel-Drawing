{"version":3,"sources":["Grid.js","App.js","index.js"],"names":["offCell","on","color","border","initialArray","Array","from","length","Grid","cellBackground","history","setCellBackground","useState","cells","setCells","colorHistory","setColorHistory","updateColor","i","dsate","e","preventDefault","map","cell","index","historyArray","Set","slice","className","el","onClick","style","backgroundColor","onPointerEnter","altKey","onContextMenu","App","setHistory","setColor","textColor","setTextColor","type","onChange","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAEMA,EAAU,CACZC,IAAI,EACJC,MAAO,UACPC,OAAQ,mBAGNC,EAAeC,MAAMC,KAAK,CAACC,OAAO,MAAM,kBAAMP,KAkErCQ,MAhEf,YAA+D,IAA/CC,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,kBAAqB,EAElCC,mBAASR,GAFyB,mBAErDS,EAFqD,KAE9CC,EAF8C,OAGpBF,mBAAS,IAHW,mBAGrDG,EAHqD,KAGvCC,EAHuC,KAKtDC,EAAc,SAACC,EAAIC,GAAL,OAAe,SAACC,GAClCA,EAAEC,iBACFP,EAASD,EAAMS,KAAI,SAACC,EAAMC,GACxB,OAAGA,IAAUN,EACRC,IACHH,EAAgB,GAAD,mBAAKD,GAAL,CAAmBL,KAC5B,CACJT,IAAI,EACJC,MAAOO,EACPN,OAAQ,SAILoB,QAGPE,EAAe,YAAI,IAAIC,IAAIX,IAAeY,OAAO,IACrD,OACE,gCACE,qBAAKC,UAAU,aAAf,SACGH,EAAaH,KAAI,SAACO,EAAIX,GAAL,OAChB,qBAAaY,QAAS,kBAAKnB,EAAkBkB,IAAKD,UAAU,UAAUG,MAAO,CAAEC,gBAAiBH,IAAtFX,QAGhB,qBAAKU,UAAU,OAAf,SACGf,EAAMS,KAAI,SAACC,EAAML,GAAP,OACT,qBACAa,MAAO,CAAEC,gBAAiBT,EAAKtB,GAAKsB,EAAKrB,MAAQ,UAAWC,OAAQoB,EAAKpB,QACzEyB,UAAU,OAEVE,QAASb,EAAYC,GACrBe,eACE,SAACb,GACMA,EAAEc,QACHpB,EAASD,EAAMS,KAAI,SAACC,EAAMC,GACxB,OAAGA,IAAUN,GACXF,EAAgB,GAAD,mBAAKD,GAAL,CAAmBL,KAC5B,CACJT,IAAI,EACJC,MAAOO,EACPN,OAAQ,SAILoB,OAOjBY,cAAelB,EAAYC,EAAGlB,IAtBzBkB,YChBEkB,EAzBH,WAAO,IAAD,EACcxB,mBAAS,IADvB,mBACTF,EADS,KACA2B,EADA,OAEUzB,mBAAS,WAFnB,mBAETV,EAFS,KAEFoC,EAFE,OAGkB1B,mBAAS,IAH3B,mBAGT2B,EAHS,KAGEC,EAHF,KAShB,OACE,sBAAKZ,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACA,uBAAOA,UAAU,cAAca,KAAK,QAAQC,SAP/B,SAACtB,GAChBiB,EAAWjB,EAAEuB,OAAOC,OACpBN,EAASlB,EAAEuB,OAAOC,QAKgDA,MAAO1C,IACvE,uBAAO0B,UAAU,YAAYa,KAAK,OAAOC,SAAU,SAACtB,GAAMoB,EAAapB,EAAEuB,OAAOC,QAASA,MAAOL,IAChG,wBAAQT,QAAS,WACfO,EAAWE,GACXD,EAASC,IAFX,oBAMA,cAAC,EAAD,CAAM9B,eAAgBP,EAAOS,kBAAmB2B,EAAU5B,QAASA,Q,QCjBzEmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACG,cAAC,EAAD,QAGLC,SAASC,eAAe,W","file":"static/js/main.83d38826.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst offCell = {\n    on: false,\n    color: \"#000000\",\n    border: \"1px solid black\",\n\n}\nconst initialArray = Array.from({length:960}, () => offCell)\n\nfunction Grid({ cellBackground, history, setCellBackground }) {\n\n  const [cells, setCells] = useState(initialArray);\n  const [colorHistory, setColorHistory] = useState([]);\n\n  const updateColor = (i , dsate) => (e) => {\n    e.preventDefault();\n    setCells(cells.map((cell, index) => {\n      if(index === i){\n        if(dsate) return dsate;\n        setColorHistory([...colorHistory, history]);\n        return{\n          on: true,\n          color: cellBackground,\n          border: \"none\",\n        }\n        \n      }\n      return cell\n    }))\n  }\n  let historyArray = [...new Set(colorHistory)].slice(-10);\n  return (\n    <div>\n      <div className=\"historyDiv\">\n        {historyArray.map((el, i) => (\n          <div key={i} onClick={()=> setCellBackground(el)} className=\"history\" style={{ backgroundColor: el}}></div>\n        ))}\n      </div>\n    <div className=\"grid\">\n      {cells.map((cell, i) => (\n        <div \n        style={{ backgroundColor: cell.on ? cell.color : \"#ffffff\", border: cell.border}} \n        className=\"cell\" \n        key={i} \n        onClick={updateColor(i)}\n        onPointerEnter={\n          (e) => {\n              if(e.altKey){\n                setCells(cells.map((cell, index) => {\n                  if(index === i){\n                    setColorHistory([...colorHistory, history]);\n                    return{\n                      on: true,\n                      color: cellBackground,\n                      border: \"none\",\n                    }\n                    \n                  }\n                  return cell\n                }))\n              }\n          }\n        }\n        // onKeyPressCapture={()=> console.log(\"e.keyCode\")}\n        // onKeyDownCapture={()=> console.log(\"e.keyCode\")}\n        onContextMenu={updateColor(i, offCell)}\n        ></div>\n      ))}\n    </div>\n    </div>\n  );\n}\n\nexport default Grid;\n","import { useState } from \"react\"\nimport Grid from \"./Grid\";\n\nconst App = () => {\n  const [history, setHistory] = useState(\"\")\n  const [color, setColor] = useState(\"#ffffff\");\n  const [textColor, setTextColor] = useState(\"\")\n\n  const onChange = (e) => {\n    setHistory(e.target.value);\n    setColor(e.target.value);\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"inputs\">\n      <input className=\"colorPicker\" type=\"color\" onChange={onChange} value={color} />\n      <input className=\"textColor\" type=\"text\" onChange={(e)=> {setTextColor(e.target.value)}} value={textColor} />\n      <button onClick={()=> {\n        setHistory(textColor);\n        setColor(textColor);\n      }}\n      >Add</button>\n      </div>\n      <Grid cellBackground={color} setCellBackground={setColor} history={history} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n       <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}